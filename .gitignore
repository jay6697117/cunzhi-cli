# Rust 项目 .gitignore 最佳实践配置

# Rust 编译输出
target/
target/**
/target/
**/*.rs.bk
*.pdb

# Cargo 相关
# 注意：对于库项目，通常应该忽略 Cargo.lock
# 对于应用程序项目，通常应该提交 Cargo.lock
# 当前项目是 CLI 应用，保留 Cargo.lock
# Cargo.lock

# IDE 和编辑器文件
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
.idea/
*.swp
*.swo
*~
*.vim

# 操作系统生成的文件
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# 临时文件和备份
*.tmp
*.temp
*.bak
*.backup
*~

# 日志文件
*.log
logs/

# 环境变量文件
.env
.env.local
.env.*.local

# 测试覆盖率报告
tarpaulin-report.html
coverage/
lcov.info
cobertura.xml

# Rust 特定的调试和性能分析文件
*.profraw
*.profdata
perf.data*
flamegraph.svg
callgrind.out.*

# 文档生成
/doc/
/docs/book/

# 本地配置文件
config.toml
.cargo/config.toml
.cargo/config

# 依赖缓存（如果使用 sccache）
.sccache/

# 构建产物
*.exe
*.dll
*.so
*.dylib
*.a
*.lib
*.rlib

# 包管理器文件（如果项目包含前端部分）
package-lock.json
yarn.lock
pnpm-lock.yaml
node_modules/

# Node.js 相关（如果项目包含前端部分）
npm-debug.log*
yarn-debug.log*
yarn-error.log*
dist/
build/

# 其他常见忽略项
*.orig
.venv/
venv/
__pycache__/
*.pyc

# 项目特定
# 如果有本地测试文件或示例文件
examples/output/
test_output/
/.cunzhi-memory/
